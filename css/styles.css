/* ========== Global design tokens ========== */
:root {
  --font: "Inter", "Helvetica Neue", Arial, sans-serif;

  --clr-bg: #fafafa;           /* page background   */
  --clr-fg: #222;              /* main foreground   */
  --clr-subtle: #666;          /* muted text        */
  --clr-border: #d9d9d9;       /* light borders     */
  --clr-panel: #ffffff;        /* form & result bg  */

  --clr-accent: #c00;          /* ← DO NOT CHANGE   */
  --radius: 6px;
  --shadow: 0 3px 6px rgba(0, 0, 0, 0.05);
}

/* ---------- Resets & base styles ---------- */
*,
*::before,
*::after { box-sizing: border-box; }

body {
  margin: 0;
  padding: 2rem 1rem;
  font-family: var(--font);
  font-size: 1rem;
  font-variant-numeric: tabular-nums;
  line-height: 1.6;
  color: var(--clr-fg);
  background: var(--clr-bg);
}

/* ---------- Typography ---------- */
h1, h2, h3, h4 {
  font-family: var(--font);
  margin: 0 0 0.75rem;
  line-height: 1.25;
}

h1 { font-size: clamp(1.8rem, 3.5vw, 2.25rem); text-align: center; }
h2 { font-size: 1.5rem; margin-top: 2.2rem; }
h3 { font-size: 1.25rem; margin-top: 1.8rem; }

p { margin: 0 0 0.85rem; color: var(--clr-fg); }

/* ---------- Form (fluid sizing) ---------- */
@media (max-width: 600px) {
  #hexForm {
    grid-template-columns: 1fr;         /* 1-column stack                   */
    padding: 1rem 1rem 1.25rem;
  }

  #hexForm label { font-size: clamp(1rem, 4.5vw, 1.15rem); }

  #hexForm input[type="number"],
  #drawInputs input[type="number"] {
    font-size: clamp(1rem, 5vw, 1.25rem);
    padding: 0.6rem 0.7rem;             /* thumb-friendly                   */
  }

  button[type="submit"] {
    grid-column: 1 / -1;                /* full-width button                */
    width: 100%;
    font-size: clamp(1rem, 4.5vw, 1.2rem);
    padding: 0.75rem 1.3rem;
  }

  fieldset { grid-column: 1 / -1; }
}

/* ---------- Form layout ---------- */
#hexForm {
  max-width: 780px;
  margin: 0 auto 2rem;
  padding: 1.5rem 1.75rem 2rem;
  background: var(--clr-panel);
  border: 1px solid var(--clr-border);
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  display: grid;
  gap: 1.25rem 1.75rem;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
}

#hexForm label {
  display: flex;
  flex-direction: column;
  font-weight: 500;
  gap: 0.35rem;
}

#hexForm input[type="number"] {
  width: 100%;
  padding: 0.45rem 0.5rem;
  font: inherit;
  text-align: center;
  border: 1px solid var(--clr-border);
  border-radius: var(--radius);
  transition: border-color 0.15s;
}

#hexForm input[type="number"]:focus {
  outline: none;
  border-color: var(--clr-accent);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--clr-accent) 40%, transparent);
}

/* fieldset (moving-line draws) */
fieldset {
  grid-column: span 2;
  padding: 1rem 1rem 1.25rem;
  border: 1px solid var(--clr-border);
  border-radius: var(--radius);
}

legend {
  padding: 0 0.4rem;
  font-weight: 600;
  font-family: var(--font);
  white-space: normal;          /* allow wrapping                    */
  overflow-wrap: break-word;    /* break *words* only if unavoidable */
  max-width: 100%;              /* never wider than its field-set    */
}

#drawInputs {
  margin-top: 0.75rem;
  display: flex;
  flex-wrap: wrap;
  gap: 0.55rem;
}

#drawInputs input[type="number"] {
  width: 3.5rem;
}

/* helper blurb inside fieldset */
fieldset p {
  margin-top: 0.6rem !important;
  font-size: 0.85rem;
  color: var(--clr-subtle);
}

/* ---------- Submit button ---------- */
button[type="submit"] {
  grid-column: span 2;
  justify-self: start;
  background: var(--clr-accent);
  color: #fff;
  font-weight: 600;
  padding: 0.55rem 1.3rem;
  border: none;
  border-radius: var(--radius);
  cursor: pointer;
  transition: transform 0.12s ease;
}

button[type="submit"]:hover {
  transform: translateY(-2px);
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
}

button[type="submit"]:active {
  transform: translateY(0);
  box-shadow: none;
}

/* ---------- Results section ---------- */
#results {
  max-width: 980px;
  margin-inline: auto;
  padding-bottom: 4rem;
}

.glyph {
  font-size: 2.6rem;
  line-height: 1;
  vertical-align: middle;
  margin-left: 0.35rem;
}

.moving {            /* ← highlight kept red                */
  color: var(--clr-accent);
  font-weight: 700;
}

/* ---------- Tables (derived, cycle, flower, story) ---------- */
table {
  width: 100%;
  border-collapse: collapse;
  margin: 0.65rem 0 1.5rem;
  font-size: clamp(0.98rem, 3.8vw, 1.1rem);
}

th, td {
  padding: 0.4rem 0.6rem;
}

@media (max-width: 480px) {
  th, td { white-space: normal; }      /* override your current nowrap      */
}

th {
  text-align: left;
  border-bottom: 2px solid var(--clr-border);
  font-weight: 600;
  font-family: var(--font);
}

tr:nth-child(even) td {
  background: #f5f5f5;
}

tr:hover td {
  background: #eee;
}

/* emphasise highlighted rows (e.g., target hexagram) */
tr[style*="color: #c00"] td {
  color: var(--clr-accent);
  font-weight: 700;
}

/* ensure large glyphs don’t break layout */
td:last-child {
  font-size: 1.35rem;
  white-space: nowrap;
}

/* ---------- Utilities & media queries ---------- */
/* Make long tables horizontally scrollable on very small screens */
@media (max-width: 480px) {
  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
  }
}

/* Slightly tighten vertical rhythm on large screens */
@media (min-width: 900px) {
  body { font-size: 1.0625rem; }
  th, td { padding: 0.45rem 0.8rem; }
}

/* === Graphical line diagram ============================================== */
.lines-diagram {                /* wrapper for all six lines                 */
  margin: 0.6rem 0 1.2rem;
}

.line-row {
  display: flex;
  justify-content: flex-start;   
  align-items: center;
  gap: 0.75rem;
}

/* ▸ SVG bar
  • prefers 260 px (desktop/tablet)
  • shrinks smoothly, bottoming out at 90 px (phones)
  • never grows beyond 260 px → avoids huge empty gaps              */
.line-svg {
  flex: 0 1 260px;   /* can grow ≤ 260 px, can shrink to 0 */
  width: auto;
  min-width: 0;      /* allow full shrink on narrow phones */
  max-width: 260px;
  height: 12px;               /* keep existing height                   */
}

.line-svg rect {
  fill: var(--clr-fg);          /* dark grey/black                           */
}

.moving .line-svg rect {        /* highlight moving lines in red             */
  fill: var(--clr-accent);
}

/* Label
  • stays on one line
  • does NOT shrink (so text never wraps)
  • ellipsis only if viewport is truly narrower than label itself   */
.line-info {
  flex: 0 0 auto;             /* fixed-width: use its content width     */
  white-space: nowrap;        /* no wrapping                            */
  overflow: hidden;
  text-overflow: ellipsis;    /* graceful fallback on ultra-narrow kits */
}

/* ──────────────────────────────────────────────────────────────
   Mobile containment + orderly draw boxes
   ────────────────────────────────────────────────────────────── */

/* 0. Let grid items shrink instead of forcing a huge min-content width */
#hexForm > * { min-width: 0; }

/* 1. ≤ 600 px  → single column, padding tweaked, nothing can overflow  */
@media (max-width: 600px) {
  #hexForm {
    width: 100%;                /* never wider than the viewport      */
    max-width: 100%;
    padding: 1rem 1rem 1.25rem; /* slimmer interior padding           */
    grid-template-columns: 1fr; /* stack everything                   */
    gap: 1rem;
  }

  /* every direct child spans that single column */
  #hexForm label,
  #hexForm fieldset,
  #hexForm button[type="submit"] { grid-column: 1 / -1; }

  /* button fills the track exactly – no left/right “overshoot” */
  #hexForm button[type="submit"] {
    justify-self: stretch;
    width: auto;
  }
}


/* More responsivity fixes */

@media (max-width: 780px) {             /* kicks in before the 780-px cap */
  #hexForm {
    width: 100%;
    max-width: calc(100% - 2rem);       /* respect body’s 1-rem padding   */
    grid-template-columns: 1fr;         /* stack labels + inputs          */
    padding: 1rem 1rem 1.25rem;         /* slimmer interior padding       */
    gap: 1rem;
  }

  /* everything spans that single track */
  #hexForm label,
  #hexForm fieldset,
  #hexForm button[type="submit"] { grid-column: 1 / -1; }

  /* button fills the track exactly – no right-edge “poke” */
  #hexForm button[type="submit"] {
    justify-self: stretch;
    width: auto;
  }
}

/* when the container (or viewport) is too narrow for 6 × 3.2 rem
   switch cleanly to 3 columns → 3 × 2 layout                    */
@media (max-width: 380px) {          /* tweak if your breakpoint differs */
  #drawInputs { grid-template-columns: repeat(3, minmax(3.2rem, 1fr)); }
}

/* make each little box flex inside its cell */
#drawInputs input[type="number"] {
  width: 100%;
  min-width: 0;
}

/* default: six equal columns that stretch/shrink with the panel */
#drawInputs {
  display: grid;
  gap: 0.55rem;
  grid-template-columns: repeat(6, minmax(3.2rem, 1fr));
}

/* if the panel can’t hold those six, switch cleanly to 3 × 2     */
/* tune the 520-px breakpoint up/down to taste;                   */
/* it just needs to be wider than 6 × (3.2 rem + gap) + panel padd */
@media (max-width: 520px) {
  #drawInputs { grid-template-columns: repeat(3, 1fr); }
}